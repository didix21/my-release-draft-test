name: Release Flow
on: [push, workflow_dispatch]

jobs:
  new-release:
    #TODO: Only run for main seems this doesnt like to github
    if: ${{ github.ref_name == 'main' }}
    name: New release
    runs-on: ubuntu-latest
    environment: CircleCI
    steps:
      - uses: actions/checkout@v2
      - run: echo $GITHUB_REF_NAME
        # TODO: How to handle if a patch has replaced the last minor?
      - name: "Get last release"
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "release"
          view_top: 1
      - name: 'Parse and store last draft version'
        run: |
          full_version=$(echo ${{ steps.last_release.outputs.tag_name }})           # Example v182.1.0
          semver_version=$(echo ${full_version:1})                                  # Example 182.1.0
          echo ${semver_version}
          major_minor_version=$(echo ${semver_version%.*})                          # Example 182.1
          echo $major_minor_version
          echo "FULL_VERSION=$full_version" >> $GITHUB_ENV
          echo "SEMVER_VERSION=$semver_version" >> $GITHUB_ENV
          echo "MAJOR_MINOR_VERSION=$major_minor_version" >> $GITHUB_ENV
      - name: 'Create new relase branch: release/${{ env.MAJOR_MINOR_VERSION }}'
        run: |
          # TODO: Remove echo and uncomment
          echo 'New major and minor version: ${{ env.MAJOR_MINOR_VERSION }}'
          release_branch=$(echo 'release/${{ env.MAJOR_MINOR_VERSION }}')
          # git branch $release_branch
          # git push --set-upstream origin $release_branch
      - name: 'Notify CircleCI to make builds'
        id: abcdef
        uses: CircleCI-Public/trigger-circleci-pipeline-action@v1.0.5
        with:
          GHA_Meta: "${{ env.SEMVER_VERSION }}"
        env:
          CCI_TOKEN: ${{ secrets.CIRCLE_CI_TOKEN }}
       #- name: 'Update App.xcconfig file'



          

