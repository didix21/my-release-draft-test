name: Release Flow
on: [push, workflow_dispatch]

jobs:
  new-release:
    #TODO: Only run for main seems this doesnt like to github
    #if: $GITHUB_REF_NAME == 'main'
    name: New release
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: echo $GITHUB_REF_NAME
        # TODO: How to handle if a patch has replaced the last minor?
      - name: "Get last release"
        id: last_release
        uses: InsonusK/get-latest-release@v1.0.1
        with:
          myToken: ${{ github.token }}
          exclude_types: "release"
          view_top: 1

      - name: "Print result"
        run: |
          echo "id: ${{ steps.last_release.outputs.id }}"
          echo "name: ${{ steps.last_release.outputs.name }}"
          echo "tag_name: ${{ steps.last_release.outputs.tag_name }}"
          echo "created_at: ${{ steps.last_release.outputs.created_atd }}"
          echo "draft: ${{ steps.last_release.outputs.draft }}"
          echo "prerelease: ${{ steps.last_release.outputs.prerelease }}"
      - name: 'Parse and stora last draft version'
        run: |
          full_version=$(echo ${{ steps.last_release.outputs.tag_name }})
          semver_version=$(echo ${full_version:1})
          echo ${semver_version}
          major_minor_version=$(echo ${semver_version%.*})
          echo $major_minor_version
          echo "FULL_VERSION=$full_version" >> $GITHUB_ENV
          echo "SEMVER_VERSION=$semver_version" >> $GITHUB_ENV
          echo "MAJOR_MINOR_VERSION=$semver_version" >> $GITHUB_ENV
      - name: 'Create a new branch'
        run: |
          echo 'New major and minor version: ${{ env.MAJOR_MINOR_VERSION }}'

          

